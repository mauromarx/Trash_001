{
    "id": "062c3c53-44bf-4360-ab7f-7a8b06dca740",
    "files": [],
    "nodes": [
        {
            "id": "f2514d43-b89f-4686-939c-27f69f71759b",
            "name": "",
            "value": "<H3><font color=\"cyan\"><strong>5. Treinamento e avaliação do modelo</strong></font></H3>",
            "mode": "md",
            "outputs": []
        },
        {
            "id": "22f1a826-86dc-4477-a5c6-e3fd4f16b019",
            "name": "",
            "value": "#### Código: BWR_TrainReg.ecl\n##### Treinamento, teste e avaliação do modelo:",
            "mode": "md",
            "outputs": []
        },
        {
            "id": "347d6d39-cc4f-42b7-baf3-469affc47ea4",
            "name": "",
            "value": "IMPORT $;\nIMPORT ML_Core;\nIMPORT LearningTrees AS LT;\n//\n// Selecionando o algoritmo\n//   Sintaxe: RegressionForest(UNSIGNED numTrees=100, UNSIGNED featuresPerNode=0,\n//                             UNSIGNED maxDepth=100, SET OF UNSIGNED nominalFields=[])\n// MyriadLearnerR := LT.RegressionForest();          // parâmetros default\n// MyriadLearnerR := LT.RegressionForest(,,,[1]);    // zip não é realmente quantitativo, mas qualitativo\nMyriadLearnerR := LT.RegressionForest(10,,10,[1]); \n//\n//\n// Obtendo o modelo composto (composto por 45 modelos = números de estados existentes no dataset)\nMyriadModelR := MyriadLearnerR.GetModel($.modSegConvData.MyriadIndTrainDataNF,$.modSegConvData.MyriadDepTrainDataNF);\nOUTPUT(MyriadModelR,,'~CLASS::XYZ::ML::MyriadModelR', NAMED('Myriad_Modelo_Treinado'),OVERWRITE);\nOUTPUT(COUNT(DEDUP(SORT((MyriadModelR), wi), wi)), NAMED('Numero_de_Modelos'));\n//\n//\n// Testando o modelo\nMyriadPredictedDeps := MyriadLearnerR.Predict(MyriadModelR,$.modSegConvData.MyriadIndTestDataNF);\nOUTPUT(MyriadPredictedDeps, NAMED('Myriad_Valores_Previstos'));\n//\n//\n// Avaliando o modelo\nMyriadAssessmentR := ML_Core.Analysis.Regression.Accuracy(MyriadPredictedDeps,$.modSegConvData.MyriadDepTestDataNF);\nOUTPUT(MyriadAssessmentR, NAMED('Myriad_Avaliacao_dos_Modelos'));\nOUTPUT(SORT(MyriadAssessmentR, -r2), NAMED('Ordenacao_pela_acuracia_dos_Modelos'));\n//",
            "mode": "ecl",
            "outputs": []
        },
        {
            "id": "6b081d57-407b-4269-b41b-43a59c12c025",
            "name": "",
            "value": "<style>\n    .rosa{background-color: mistyrose;}\n    .ciano{background-color: lightcyan;}\n    .amarelo{background-color: lightyellow;}\n</style>\n\n<table border=\"1\"\n  <colgroup>\n    <col class=\"rosa\">\n    <col class=\"ciano\">\n    <col class=\"amarelo\">\n  </colgroup>\n<tr><td><strong>\n\n\n[<- Previous](SegData.eclnb)\n</strong></td><td><strong>\n\n[ MENU ML ](Menu_ML.eclnb)\n</strong></td><td><strong>\n\n[Next ->](QueryData.eclnb)\n</strong></td></tr><table>",
            "mode": "md",
            "outputs": []
        }
    ]
}